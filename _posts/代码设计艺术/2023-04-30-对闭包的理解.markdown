---
title: 闭包（基本概念）
date: 2023-04-30 08:00:00
categories: 
- [代码设计艺术]
---



**一个能记住嵌套作用域变量值的函数，尽管作用域已经不存在**
以动态语言python举个例子：

```python
def f1():  
    x = 88  
  
    def f2():  
        print(x)  
  
    return f2  
  
  
action = f1()  
action()  # 88
```

应用的场景有工厂函数
# 工厂函数
```python
def maker(n):  
    k = 8  
  
    def action(x):  
        return x ** n + k  
  
    return action  
  
  
f = maker(2)  
print(f(3))  # 17
```
这里我们可以看出，**即使后面 maker 返回并退出**，内嵌的函数 action 也记住了嵌套作用域内的两个嵌套变量，一个是变量 k，一个是参数 n。

**修饰器的实现就用到了闭包**

# nonlocal
本地函数通过 global 声明对全局变量进行引用修改，那么对应的，内嵌函数内部想**对嵌套作用域中的变量进行修改**，就要使用 nonlocal 进行声明、
```python
def test(num):
    in_num = num
    def nested(label):
        nonlocal in_num
        in_num += 1
        print(label, in_num)
    return nested

F = test(0)
F('a')  # a 1
F('b')  # b 2
F('c')  # c 3


# 注意：不同的函数副本之间的内嵌变量 是独立隔离的
G = test(10)
G('a')  # a 11
```
