总结测试中常用到的linux指令（相比在linux下开发，还远远不够，移步计算机系统/linux总结文档）

# 基础命令
```linux
pwd:查看当前位置，当前所在路径
/:表示根目录，为绝对路径
~:表示当前登陆用户的家目录
./:表示当前目录，为相对目录
../:表示上一级目录，为相对路径
cd:用于切换当前工作目录
    语法：cd 相对路径or绝对路径
    例子：cd ../  切换到上一级目录

ls:显示指定目录下的所有内容
    -a:显示所有文件
    -l:详细列出所有文件
    例如：
    ls -a 
    ls -l 相当于 ll
    
tree:以树状结构列出目录内容
clear:清屏命令
```

# 目录操作
```linux
mkdir:创建目录命令
    语法：mkdir 目录名称
        创建层级目录：mkdir -p 目录1/目录2/目录3

rmdir:删除一个空目录
    语法：rmdir 目录名称
        删除层级目录：rmdir -p 目录1/目录2/目录3

rm:删除一个文件或目录
    语法：rm 文件或目录
        删除文件或目录不需要提示：rm -rf 文件或目录名

```


# 文件权限操作
```linux
文件属性
drwxrwxrwx
    （1）第一个字母代表文件类型：d（目录），-（普通文件），l（连接文件）
    （2）第一个rwx：代表owner拥有者具有的权限。用字母u表示
    （3）第二个rwx：代表group所属的用户组的权限。用字母g表示
    （4）第三个rwx：代表other user其他用户权限。用字母o表示
    r:read 可读权限。用数字4表示
    w:write 表示写入。用数字2表示
    x:excute 表示可执行。用数字1表示
    
更改文件权限（chmod）
    语法：chmod [参数] 权限 文件或目录    中括号代表该项可省略，中括号在实际使用中是不需要的，下同 
    数字法：chmod 777 文件或目录 （赋予所有人可读写执行）
    字母法：chmod u+x,g-w,o=rx 文件名或目录  （这是什么意思）
        chmod -R 777 目录名称 （赋予该目录及目录下所有文件权限）

更改文件的所有者（chown）
    语法：chown [参数] [用户名] 文件名
    例如：zhangsan是一个用户名
        chown zhangsan 文件名 
        chown -R zhangsan 目录名称 （更改目录及目录下的所有文件）



```


# 文件操作
```linux
1、文件创建（touch）
语法：touch 文件名

2、查看文件
cat [参数] 文件名：将文件输出到屏幕上
    -n：对输出的内容，输出行号
    -b：对非空白行输出行号

more [参数] 文件名：分屏输出文本内容
more -5 文件名：一次显示5行内容
more +5 文件名：从第5行开始执行
more -s 文件名：有连续两行以上空白行，使用一行空白行代替

使用`q`，退出显示文件内容

tail：用于查询正在改变的日志文件
tail -f 日志文件名：查看动态日志文件
tail -n 5 日志文件名：显示文件尾部的5行内容
tail -n +10 日志文件名：查看文件内容，从第10行至文件末尾

3、重定向
>:将打印到屏幕的内容，输出到文档中
>>:将打印到屏幕的内容，追加到文档中
例如：
ls / > aa.txt 将根目录下的文件内容 输出 到aa.txt文档中
pwd >> aa.txt 将打印当前路径 追加 到aa.txt文档中


4、复制（cp）
语法：cp [选项] [文件名] [指定的目录]
复制后重命名：cp 文件名1 目录名/文件名2
复制目录及目录下所有内容：cp -r 目录名/ /目录2/目录3 （回去试一试）

5、移动（mv）
语法：mv 文件或目录 目录2 （将文件或者目录，移动到其他目录下）
    mv 文件1 文件2 （更改文件名称）

6、显示文件大小（du）
du -sh [文件/目录]

```


# 链接
```linux
1、硬链接
语法：ln -d [源文件或目录] [目标文件或目录] （创建前者的一个硬链接，即后者）
以文件副本的形式存在
不占用实际空间
不允许给目录创建硬链接


2、软链接
语法：ln -s [源文件或目录] [目标文件或目录] （创建前者的一个硬链接，即后者）
以路径的形式存在
类似快捷方式


```



# vim编辑器
```linux
1、用vim打开文件：vim 文件名


2、编辑文件内容
i键：在当前位置插入内容
a键：在当前位置后插入内容（回去试一遍，光标前和后？）


3、退出文件
【:q】直接退出，不保存文件
【:wq】保存并退出
【:w!】强制退出
【:wq!】强制保存并退出

4、查找命令
【/[查找的关键字]】
例如：/hundred
按【n】键查找下一个；按【N】键查找上一个

5、替换命令（回去试一下）
替换全文内容：
【:%s/old/new/g】
old：旧的内容
new：代表新的内容
【:set nu】设置行号
【:set nonu】去掉行号

6、移动命令
【h】键：左移一个字符
【l】键：右移一个字符
【k】键：上移一个字符
【j】键：下移一个字符
【gg】键：快速移动到文件头
【GG】键：快速移动到文件尾部

7、撤销：【u】键


8、删除
【x】键：删除当前字符
【dd】键：剪切当前行
【5dd】键：删除当前行开始的5行内容


```


# 文件查找


```linux
在指定目录下，查找文件：
语法：find path -option

path:上文讲过了怎么写


-option:
    -name:按文件名字查找
        find ./ -name '*.txt' （查询当前路径下所有.txt的文件）
    -mtime:按文件修改时间查找
        语法：find ./ -mtime -n
        例子：find ./ -mtime -2 （查找当前路径下，2天以内修改的文件）
            find ./ -mtime +2 （查找当前路径下，2天前修改的文件）
        （技巧：stat 文件名 （查看文件更改时间））
    -size:按文件的大小查询
        find ./ -size +50M （查看当前路径下，超过50M的文件）
        find ./ -size +50c （查看当前路径下，超过50个字节的文件）
        find ./ -size -100c （查看当前路径下，小于100个字节的文件）
        （技巧：du sh 文件名 （查看文件的大小））




```

# 文件内容查找
```linux
查找文件内容，语法：grep [选项] "搜索内容" 文件名
例如：查找man_db.conf文件中的MANDB_MAP
grep "MANDB_MAP" man_db.conf
    -n:显示行号
    -i:忽略大小写
    （技巧：和管道符一起使用）ps aux ｜ grep tomcat （查看tomcat进程）

```


# 其他命令
```linux
1、归档解压
tar
压缩文件：tar -zcvf 压缩包名称.tar.gz 文件1 文件2（指两个文件压缩到一起？）
解压tar包：tar -zcvf 压缩包名称.tar.gz
解压到指定目录下：tar -zcvf 压缩包名称.tar.gz -C 路径

2、其他命令（回去试试）
which：查找命令在哪个位置
whereis：输出位置及对应的文件名
who：查看所有登陆用户
whoami：查看当前用户
sudo：代表以系统管理员身份执行命令
exit：退出登录账户
date：查看当前系统日期
top：查看系统资源
free：查看系统内存使用情况
ps：查看终端运行程序的进程
ps -aux | grep nginx
ps -ef | grep nginx

3、关机重启
reboot：重启Linux
shutdown now：立即关机

4、yum命令
yum list 软件包名 （查看指定安装的软件包）
yum update 软件包名称 （更新软件包）
yum search 关键词 （根据关键词查找软件包）
yum install -y 软件包名称或者关键词 （安装指定的软件包）
yum remove 软件包名称 （卸载软件包）
yum clear all （清除yum缓存）

```
