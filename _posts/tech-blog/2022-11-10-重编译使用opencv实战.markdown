---
layout: single
title:  "重编译Opencv实战"
author: laihandong
tags: C++ 编程语言
---



# 〇、知识扫盲

在了解到需要去下载opencv的源代码的时候，我是很懵的，这么牛逼的开源项目我竟然可以去自定义重编译并使用它，但我对编译这么大的项目丝毫经验没有，在此之前连cmake、mingw、gcc等等东西是啥都不知道（感觉主要原因是我的C/C++项目经历几乎空白，大学四年就属python脚本写得最多了，大一学的C和C++知识也变模糊了），废话不多说了，先看看哪些概念是我在经历了这次实践才知道的。

## (1)C/C++编译原理和机制
所有高级语言程序想在机器上运行，那么都必须处理成机器能够理解的低级语言（比如二进制的机器语言、嵌入式、汇编语言等），然后再让机器去执行。
C/C++的编译过程就是把源程序的每一句高级语言编译成机器语言，并保存为二进制文件来给机器运行，具体包括如下几个步骤：
1. 预编译 gcc -E xxx.c -o xxx.i
**预处理器**会将#****这些命令进行展开，也叫“宏展开”，目的是好在接下来的阶段进行替换。
不仅是把define的值展开，也即将include的外部代码加载替换进来了。
这时候生成的**临时的预编译文件是以.i为后缀**。
当然，类似注释、#pragma等字符也是在预编译里处理的。
2. （正式）编译 gcc -S xxx.i -o xxx.s
	这个过程是**编译器**将一个个独立的（高级语言）.c/.cpp文件作为基本单元，编译成一个个**汇编代码文件**（编译器是通过后缀名来确定是否编译该文件，比如.h文件就不会进行编译）。
	**这时候生成的汇编代码文件是以.s为后缀**。

	在翻译成汇编语言前，工作的内容可以粗略分为两部分：
	一是，检验函数或者变量是否存在它们的声明（至于怎么实现函数，要在链接中再去找函数入口地址，include***本质就是提供声明）；二是，检查语句是否符合C/C++语法。
	**拓展**：汇编语言和硬件有很大的关系，所以如何优化生成的汇编代码是一项重要的技术
	
3. 汇编 gcc -C xxx.s -o xxx.o
	**把汇编语言代码，一条条转化成机器语言（二进制）代码，也就是目标代码**。有汇编语句和机器指令的对照表，翻译即可。
	**这时候生成的目标代码文件（也叫可重定位目标文件），是以.o(linux)/.obj(windows)为后缀的。**

	目标文件中存储了编译后的机器指令代码、数据、符号表、调试信息、字符串等等内容，并把这些信息**按不同的属性以“段”的方式存储，目标文件从结构上说，是已经编译好之后的可执行文件。**，但其实不可以直接执行（二进制可执行文件也是一种目标文件）

	**注意**：但由于之前是以一个个源代码文件进行编译的，所以一个个的目标文件未经过链接之前，有些地址和符号还未调整
	
4. 链接 gcc xxx.o -o xxx
	由于目标文件并不能立即被执行，所以这一步主要解决目标文件的互相依赖关系，由**链接器**将各种符号引用和符号定义转化为可执行文件中的合适信息，通常是虚拟地址。
	**这时候一般生成的可执行文件（也叫可执行目标文件）是以.exe(windows)/.out(linux)/无后缀(linux)为后缀的**

	还有一种特殊的目标文件叫**共享目标文件（又叫库文件）**，也能**由链接器创建**并通过指定-G选项来生成指定形式。
	库文件的一种是静态库（.a(linux)/.lib(windows)），
	库文件的另一种是动态库（.so(linux)/.dll(windows)），

	（这两种库文件还没搞清楚，待更新）
## (2)C/C++编译工具和编译器
## (3)C/C++编译出的东西如何使用
## (4)大型项目需要用到的编译工具
## (5)不同系统下编译的相通之处

# 一、资源准备
- 编译器：MSVC2019（等于安装Microsoft Visual Studio 2019）
- 编译工具：CMake-gui（官网链接）
- python环境：建议使用python3（官网链接）
- opencv源代码包：建议4.0及以上系列（官网链接）
- 操作系统：Windows 10
# 二、操作步骤
## (1)CMake配置
用cmake-gui选定源码包后，在默认的配置上，还需要做的工作如下：
+ 勾选python3相关的配置
+ opencv-contrib配置
+ FREExx的配置（可以调用收费算法）
+ pydxx的配置（把必要的库一起编译进最终的cv2 pyd文件，以免出现导入库时找不到模块的报错）

## (2)Configure&Generate
这一步和（1）交叉进行，直到必要的配置都设定好后，且没有报错与红色区域为止。
## (3)生成解决方案
用visual studio打开opencv.sln，对两个文件（xx和xx）进行release重新生成方案。
## (4)安装opencv-python和opencv-contrib-python
python版本不要过低即可（本人亲测3.6、3.8、3.10均可），先pip install opencv-python和opencv-contrib-python（版本与用源码编译的opencv保持一致）

## (5)替换cv2.pyd
将以源码方式编译出来的cv2.pyd，把python的cv路径里的相同文件给替换掉即可。
## (6)验证结果

```python
import cv2
img = cv2.imread('xx/xx.jpg')
cv2.imshow(img)  # 若正常显示图片，则证明导入成功
```

本文待完善（尽自己可见）
