---
layout: single
title:  "MySQL入门"
tags: 数据库
---



## 一、初步了解关系数据库

### Relational Database Management System的特点：

1.数据以表格的形式出现
2.每行为各种记录名称
3.每列为记录名称所对应的数据域
4.许多的行和列组成一张表单
5.若干的表单组成database

### RDBMS 术语
在我们开始学习MySQL 数据库前，让我们先了解下RDBMS的一些术语：

数据库: 数据库是一些关联表的集合。
数据表: 表是数据的矩阵。在一个数据库中的表看起来像一个简单的电子表格。
列: 一列(数据元素) 包含了相同类型的数据, 例如邮政编码的数据。
行：一行（=元组，或记录）是一组相关的数据，例如一条用户订阅的数据。
冗余：存储两倍数据，冗余降低了性能，但提高了数据的安全性。
主键：主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。
外键：外键用于关联两个表。
复合键：复合键（组合键）将多个列作为一个索引键，一般用于复合索引。
索引：使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。
参照完整性: 参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性。
表头(header): 每一列的名称;
列(col): 具有相同数据类型的数据的集合;
行(row): 每一行用来描述某条记录的具体信息;
值(value): 行的具体信息, 每个值必须与该列的数据类型相同;
**键**(key): 键的值在当前列中具有唯一性。

### MySQL数据库

MySQL 是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，目前属于 Oracle 公司。MySQL 是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。

MySQL 是开源的，所以你不需要支付额外的费用。
MySQL 支持大型的数据库。可以处理拥有上千万条记录的大型数据库。
**MySQL 使用标准的 SQL 数据语言形式**。
MySQL 可以运行于多个系统上，并且支持多种语言。这些编程语言包括 C、C++、Python、Java、Perl、PHP、Eiffel、Ruby 和 Tcl 等。
MySQL 对PHP有很好的支持，PHP 是目前最流行的 Web 开发语言。
MySQL 支持大型数据库，支持 5000 万条记录的数据仓库，32 位系统表文件最大可支持 4GB，64 位系统支持最大的表文件为8TB。
MySQL 是可以定制的，采用了 GPL 协议，**你可以修改源码来开发自己的 MySQL 系统**。


## Mysql 外码约束
添加主键约束：

alter table 表名 add constraint 主键 （形如：PK_表名） primary key 表名(主键字段);

添加外键约束：

alter table 从表 add constraint 外键（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);
//constraint 在外键名前面


删除主键约束：

alter table 表名 drop primary key;

删除外键约束：

alter table 表名 drop foreign key 外键（区分大小写）;
//外键：外键！=外键字段
//show create table bi_sai_xiang_mu（该表名）来找到这个约束的字段名，一般形如xx_ibfk[_1];

添加列：

alter table 表名 add column 列名 varchar(30);

删除列：

alter table 表名 drop column 列名;

修改列名：

alter table 表名 change oldcolname newcolname int;

修改列属性：

alter table 表名 modify 列名 varchar(22);

## 基本语句

```mysql
--基本语句
--所有的语句都要以分号结尾
exit	--退出连接
--		--单行注释
#		--单行注释
/*...*/		--多行注释
```

### 数据库管理

```mysql
--创建数据库
CREATE DATABASE [IF NOT EXISTS] 数据库名;

--删除数据库
DROP DATABASE [if EXISTS] 数据库名;

--使用数据库
--如果表名或者字段名是特殊字符，则需要带``
use 数据库名;

--查看数据库
SHOW DATABASES;

```
